<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.emp.dynamic">

	
	<!-- 
		SELECT 결과 컬럼명을 column에 적고 DTO의 필드명을 property에 적으면 연결해줌
		autoMapping="false" : 적지 않은 값들은 자동으로 연결시켜주지 않음 ( 기본값 : true )	
	-->
	<resultMap id="empResult" type="empDTO2" autoMapping="false">
		<result property="empno" column="no"/>
		<result property="ename" column="ename"/>
		<result property="sal" column="sal"/>
		<result property="job" column="job"/>
		<result property="hireDate" column="hiredate"/>
	</resultMap>

	<!-- <select id="selectEmpList" resultType="emp.crud.EmpDTO" parameterType="emp.crud.EmpDTO"> -->
	<select id="selectEmpList" resultMap="empResult" parameterType="empDTO2">
		SELECT 
			empno as no, ename, sal, job, hiredate
		FROM
			emp0
		<!--  
			if가 거짓일 때 WHERE만 남아 오류가 나기 때문에 항상 참인 1 = 1을 적어놓는다
			다만 이 방법은 UPDATE나 DELETE가 한 번에 될 수도 있기 때문에 조심해야한다
		WHERE 1 = 1 
			<if test="keyword != null and keyword != '' ">
				AND LOWER(ename) LIKE LOWER('%' || #{keyword} || '%')
			</if> 
		-->
		<!-- 
			<where>
			 : if가 거짓이면 WHERE문이 지워지고 if가 참일 때 WHERE문 생성
			 : WHERE 바로 다음에 오는 AND나 OR는 자동으로 지움
			 
			 <where>
				<if test="keyword != null and keyword != '' ">
					AND LOWER(ename) LIKE LOWER('%' || #{keyword} || '%')
				</if>
			</where> 
		-->
		<where>
			<if test="searchType != null and searchType != '' 
					and keyword != null and keyword != ''">
				<!-- choose문 ( otherwise 사용 가능 ) -->
				<choose>
					<when test="searchType == 1">
						AND LOWER(ename) LIKE LOWER('%' || #{keyword} || '%')
					</when>
					<when test="searchType == 2">
						AND LOWER(job) LIKE LOWER('%' || #{keyword} || '%')
					</when>
					<when test="searchType == 3">
						AND ( LOWER(ename) LIKE LOWER('%' || #{keyword} || '%')
						OR LOWER(job) LIKE LOWER('%' || #{keyword} || '%') )
					</when>
					<when test="searchType == 4">
						AND sal <![CDATA[ <= ]]> #{keyword}
					</when>
				</choose>
			</if>
			
			<if test="checks != null">
				AND empno in
				<!-- 
					item : foreach 안에서 사용할 변수
					collection : 반복되는 것 ( 배열 또는 list ) 
						dto나 map 안에 있으면 필드명이나 key를 적어서 꺼냄
						parameterType="array" -> "array"
						parameterType="list" -> "list"
					open : 반복 전에 가장 앞에 써 줄 글씨
					separator : 중간 중간에 써 줄 글씨
					close : 반복 후 가장 마지막에 써 줄 글씨
				 -->
				<foreach item="item" collection="checks" 
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
		</where>
		
		<choose>
			<when test="orderType == '' and orderType == null">
				
			</when>
			<when test="orderType == 'desc'">
				ORDER BY empno DESC
			</when>
			<when test="orderType == 'asc'">
				ORDER BY empno ASC
			</when>
		</choose>
	</select>

</mapper>